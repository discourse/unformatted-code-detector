import { wrap } from "../utils";

export const noCode = [
  "hello world",
  "just some _plain old italics_",
  "one _word_ italicized",
  "one *word* italicized",
  "one __word__ bolded",
  "one **word** bolded",
  "# an innocent heading",
  "google.com",
  "https://www.google.com",
  "semicolons; also,",
  "freeCodeCamp",
  "hyphenated-word",
  "C++",
  "Notepad++",
  "this is (just some stuff in brackets)",
  "this is(just some stuff in brackets, despite the typo)",
  "{ I just happen to like curly braces }",
  "'",
  '"',
  "\n",
  "\t",
  "\0",
  "\\",
  "$15",
  "||", // empty table heading
  "https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage",
  "https://en.wikipedia.org/wiki/LAN_(disambiguation)",
  "[LAN](https://en.wikipedia.org/wiki/LAN_(disambiguation))",
  "https://www.google.com?foo=bar",
  "https://www.google.com?foo=bar,baz",
  "https://www.google.com?foo[0]=bar&foo[1]=baz",
  "email@example.com",
  "O(n)",
  ":smile:",
  ":slight_smile:",
  ":+1:",
  "TradeName(tm)",
  "copy(c)",
  "registered(R)",
  '[quote="David_Bowie, post:8, topic:1120"]\nsome text\n[/quote]',
  'some other stuff\n\n[quote="David_Bowie, post:8, topic:1120"]\nquoted text\n[/quote]\n\nmore stuff',
  'empty\n\n[quote="David_Bowie, post:8, topic:1120"][/quote]',
  "[abc](https://www.google.com)",
  "![abc](https://www.google.com/img.png)",
  "That's Japanese. ;)\n\nFunny bug though.",
  "That's Japanese. :stuck_out_tongue:\n\nFunny bug though.",
  "That's Japanese. :???:\n\nFunny bug though.",
  "That's Japanese. :!:\n\nFunny bug though.",
];

export const withUnformattedCode = [
  "const a = $helloWorld",
  "const a = helloWorld;",
  ".my-class { background: red; }",
  ":symbol",
  "this_is_snake_case",
  "a snake_case var",
  "// a comment",
  "// www.google.com",
  "; an old-school comment",
  "/* this comment\nspans two lines */",
  "/* this comment doesn't */",
  '"""\nhooray for python\n"""',
  "'''\nhooray for python\n'''",
  "noArgs()",
  "oneArg(1)",
  "lotsOfArgs(1, \"a\", 'b', onionSoup)",
  "myArr[15]",
  "myObj['prop']",
  "{",
  "}",
  "{{templates}}",
  "${js}", // exclude backticks to bypass code markup stripping
  '"#{ruby}"',
  "1 && 2",
  "a != b",
  "a !== b",
  "exists.?maybeExists",
  "arr << item",
  "0b100 >> 2",
  "Double::Colons",
  "counter += 2",
  "counter -= 2",
  "counter *= 2",
  "counter /= 2",
  "maybeExists ||= definitelyExists",
  "maybeExists &&= definitelyExists",
  "casting ?= operator",
  "\\'",
  '\\"',
  "\\n",
  "\\t",
  "\\r",
  "\\0",
  "\\\\",
  "<? hello erb ?>",
  "<% hello php %>",
  'some other stuff\n\n[quote="David_Bowie, post:8, topic:1120"]\nquoted text\n[/quote]\n\ncode overHere()',
  'some other stuff\n\n[quote="David_Bowie, post:8, topic:1120"]\nquoted text\n[/quote]\n\ncode overHere()\n\n\na',
  "2021-05-17T13:40:52.845Z",
  "2021-05-17T13:40:52.845+01:00",
  "2021-05-17T13:40:52.845-01:00",
  "2021-05-17T13:40:52.845",
  "2021-05-17T13:40:52",
  "2021-05-17T13:40:52Z",
  "2021-05-17T13:40:52+01:00",
  "2021-05-17T13:40:52-01:00",
  "error\nat java.base/java.lang.Thread.dumpStack(Thread.java:1383)",
  "error\n\tat com.somewhere.stacktraces.StackTrace.d(StackTrace.java:23)",
  "error\n    at unwrapOpResult (deno:core/core.js:106:13)",
  '{"a": 1}',
  '{"a":"b","c":"d"}',
  '{"a": "b","c": "d"}',
  '{ "a": "b","c": "d" }',
  '{ "a" : "b","c" : "d" }',
  `a != b
some prose
/* multi
line != !=
comment */

a != 5
a != 7
`,
];

export const withBareHTML = [
  "<!-- this\n is a \n comment -->",
  '<empty with="attributes">',
  "<empty-no-attributes>",
  "<tag>\nsome text\n</tag>",
  "<orphan>",
  "</orphan>",
  "one &amp; two",
  "three &#42; four",
  "five &#x2a; six",
];

export const withFormattedCode = withUnformattedCode.map(wrap);

export const withFormattedHTML = withBareHTML.map(wrap);
